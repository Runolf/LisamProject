{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\pages\\\\project-detail.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../services/project-service';\nimport \"./detail.css\";\nimport { statut } from '../models/statut';\nimport formatDate from '../helpers/format-date';\n\nconst ProjectDetail = ({\n  match,\n  client\n}) => {\n  const [project, SetProject] = useState(null);\n  useEffect(() => {\n    ProjectService.getProject(+match.params.id).then(project => SetProject(project));\n  }, [match.params.id]);\n  var date;\n  if (project !== undefined) if (project !== null) {\n    date = new Date(project.SignatureDate);\n  }\n  var st = project === null ? null : statut[project.Statut];\n\n  if (project !== null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, project ? React.createElement(\"table\", {\n      className: \"container responsive-table centered table-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Project: \", project.ProjectNumber, React.createElement(Link, {\n      to: `/project-edit/${project.ProjectId}`,\n      className: \"btn right grey waves-effect waves-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"edit\"))))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"grey darken-2 m2 center border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Project leader: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), project.ProjectLeader)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"grey darken-2 m2 center border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Signature date:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" \", formatDate(date))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"grey darken-2 m2 center border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Statut:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" \", st)), project.Client ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"grey darken-2 m2 center border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Client:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \" \", project.Client.Company_Name)) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"grey darken-2 m2 center border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Pas de client\")))) : React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pas de projet trouv\\xE9\"));\n  } else {\n    return React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Pas de projet trouv\\xE9\");\n  }\n};\n\nexport default ProjectDetail;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/project-detail.tsx"],"names":["React","useState","useEffect","Link","ProjectService","statut","formatDate","ProjectDetail","match","client","project","SetProject","getProject","params","id","then","date","undefined","Date","SignatureDate","st","Statut","color","ProjectNumber","ProjectId","ProjectLeader","Client","Company_Name"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link} from 'react-router-dom';\r\nimport Project from '../models/project';\r\nimport ProjectService from '../services/project-service';\r\nimport \"./detail.css\";\r\nimport { statut } from '../models/statut';\r\nimport Client from '../models/client';\r\nimport formatDate from '../helpers/format-date';\r\n\r\ntype Params = {id: string};\r\ntype Props = {client: Client}\r\nconst ProjectDetail: FunctionComponent<RouteComponentProps<Params> & Props> = ({match, client}) => {\r\n    \r\n    const [project, SetProject] = useState<Project|null>(null)\r\n\r\n    useEffect(() => {\r\n        ProjectService.getProject(+match.params.id)\r\n        .then(project => SetProject(project));\r\n        }, [match.params.id]);\r\n\r\n        var date;\r\n        if(project !== undefined)\r\n        if (project !== null) {\r\n         date = new Date(project.SignatureDate);\r\n        }\r\n        \r\n        var st: string|null = (project === null)?null:statut[project.Statut];\r\n\r\n        if(project !== null){\r\n        \r\n            return (\r\n                <div>\r\n                    {project? ( \r\n                    <table className=\"container responsive-table centered table-detail\">\r\n                        <thead>\r\n                            <tr style={{color: \"black\"}}>\r\n                            <th>Project: {project.ProjectNumber}\r\n                            <Link to={`/project-edit/${project.ProjectId}`} className=\"btn right grey waves-effect waves-light\">\r\n                                    <i className=\"material-icons\">edit</i>\r\n                                </Link>\r\n                            </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr> \r\n                                <td className=\"grey darken-2 m2 center border\">Project leader: <br/>\r\n                                {project.ProjectLeader}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"grey darken-2 m2 center border\">Signature date:<br/> {formatDate(date)}</td> \r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"grey darken-2 m2 center border\">Statut:<br/> {st}</td>\r\n                            </tr>\r\n                            { project.Client?\r\n                            <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">Client:<br/> {project.Client.Company_Name}</td>\r\n                            </tr>\r\n                            :\r\n                            <tr>\r\n                                <td className=\"grey darken-2 m2 center border\">Pas de client</td>\r\n                            </tr>\r\n                            }\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    \r\n                    ):(\r\n                        <h5>Pas de projet trouvé</h5>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <h5>Pas de projet trouvé</h5>\r\n            );\r\n        }\r\n}\r\n\r\nexport default ProjectDetail; "]},"metadata":{},"sourceType":"module"}