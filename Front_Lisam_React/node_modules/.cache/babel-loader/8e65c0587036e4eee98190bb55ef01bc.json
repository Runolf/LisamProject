{"ast":null,"code":"// import React, {FunctionComponent} from 'react';\n// import CandP from '../component/client-and-project-card';\n// import Project from '../models/project';\n// import Client from '../models/client';\n// import ClientService from '../services/client-services';\n// import './list.css';\n// import { useProjects } from '../hooks/projects-hook';\n// import { useClients } from '../hooks/clients-hook';\n// import { useClient } from '../hooks/client-hook';\n// import { useProject } from '../hooks/project-hook';\n// export const BothList: FunctionComponent = () =>{\n//     const clients = useClients();\n//     /*\n//         1) récupérer id client et retourner le client\n//         2) stocker la fk du projet du client en question\n//         3) récupérer le projet dont l'id est retourné par l'étape précédente\n//         4) retourner l'objet\n//     */\n//     // const GetProject = (idCLient: number): Project | null | undefined => {\n//     //     //1 \n//     //     var Cli = useClient(idCLient); \n//     //     //2\n//     //      var FKProject:number|null|undefined = (Cli?.ProjectId !== undefined)? Cli.ProjectId :null;\n//     //     //3\n//     //      var Pro:Project|undefined|null = useProject(FKProject);\n//     //     //4\n//     //      return Pro;\n//     // }\n//     return ( null\n//         // <div className=\"col grid\">\n//         //     { \n//         //         clients.map((C) => <CandP key={C.ClientId} client={C} project={\n//         //                 GetProject(C.ClientId)\n//         //         }/>)\n//         //     }\n//         // </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/bothlist.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, {FunctionComponent} from 'react';\r\n// import CandP from '../component/client-and-project-card';\r\n// import Project from '../models/project';\r\n// import Client from '../models/client';\r\n// import ClientService from '../services/client-services';\r\n// import './list.css';\r\n// import { useProjects } from '../hooks/projects-hook';\r\n// import { useClients } from '../hooks/clients-hook';\r\n// import { useClient } from '../hooks/client-hook';\r\n// import { useProject } from '../hooks/project-hook';\r\n\r\n\r\n// export const BothList: FunctionComponent = () =>{\r\n//     const clients = useClients();\r\n\r\n//     /*\r\n//         1) récupérer id client et retourner le client\r\n//         2) stocker la fk du projet du client en question\r\n//         3) récupérer le projet dont l'id est retourné par l'étape précédente\r\n//         4) retourner l'objet\r\n//     */\r\n\r\n//     // const GetProject = (idCLient: number): Project | null | undefined => {\r\n//     //     //1 \r\n//     //     var Cli = useClient(idCLient); \r\n//     //     //2\r\n//     //      var FKProject:number|null|undefined = (Cli?.ProjectId !== undefined)? Cli.ProjectId :null;\r\n//     //     //3\r\n//     //      var Pro:Project|undefined|null = useProject(FKProject);\r\n//     //     //4\r\n//     //      return Pro;\r\n\r\n//     // }\r\n\r\n//     return ( null\r\n//         // <div className=\"col grid\">\r\n//         //     { \r\n//         //         clients.map((C) => <CandP key={C.ClientId} client={C} project={\r\n//         //                 GetProject(C.ClientId)\r\n//         //         }/>)\r\n//         //     }\r\n            \r\n//         // </div>\r\n//     )\r\n// } \r\n\r\n"]},"metadata":{},"sourceType":"module"}