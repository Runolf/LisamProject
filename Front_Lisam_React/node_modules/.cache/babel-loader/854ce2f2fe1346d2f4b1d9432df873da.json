{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\pages\\\\client-detail.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ClientService from '../services/client-services';\nimport \"./detail.css\";\n\nconst ClientDetail = ({\n  match\n}) => {\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    ClientService.getClient(+match.params.id).then(client => setClient(client));\n  }, [match.params.id]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, client ? React.createElement(\"table\", {\n    className: \"container responsive-table centered table-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, client.Company_Name, React.createElement(Link, {\n    to: `/client-edit/${client.ClientId}`,\n    className: \"btn right grey waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"edit\"))))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, client.Language)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, client.Email)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Number: \", client.Number)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Adress: \", client.Street + \" \" + client.ZipCode + \" \" + client.City)))) : React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Pas de client trouv\\xE9\"));\n};\n\nexport default ClientDetail;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/client-detail.tsx"],"names":["React","useState","useEffect","Link","ClientService","ClientDetail","match","client","setClient","getClient","params","id","then","color","Company_Name","ClientId","Language","Email","Number","Street","ZipCode","City"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAA8BC,IAA9B,QAAyC,kBAAzC;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,cAAP;;AAIA,MAAMC,YAA4D,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE9E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAc,IAAd,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACRE,IAAAA,aAAa,CAACK,SAAd,CAAwB,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAtC,EACCC,IADD,CACML,MAAM,IAAIC,SAAS,CAACD,MAAD,CADzB;AAEP,GAHQ,EAGN,CAACD,KAAK,CAACI,MAAN,CAAaC,EAAd,CAHM,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,GACH;AAAO,IAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAE;AAAR,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,MAAM,CAACO,YAAZ,EACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,gBAAeP,MAAM,CAACQ,QAAS,EAA1C;AAA6C,IAAA,SAAS,EAAC,yCAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADJ,CADJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDR,MAAM,CAACS,QAAvD,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDT,MAAM,CAACU,KAAvD,CADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAwDV,MAAM,CAACW,MAA/D,CADJ,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAwDX,MAAM,CAACY,MAAP,GAAgB,GAAhB,GAAsBZ,MAAM,CAACa,OAA7B,GAAuC,GAAvC,GAA6Cb,MAAM,CAACc,IAA5G,CADJ,CAVJ,CAVJ,CADG,GAkCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAnCZ,CADJ;AAyCH,CAlDD;;AAoDA,eAAehB,YAAf","sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link} from 'react-router-dom';\r\nimport Client from '../models/client';\r\nimport ClientService from '../services/client-services';\r\nimport \"./detail.css\";\r\n\r\ntype Params = {id: string};\r\n\r\nconst ClientDetail: FunctionComponent<RouteComponentProps<Params>> = ({match}) => {\r\n\r\n    const [client, setClient] = useState<Client|null>(null);\r\n\r\n    useEffect(() => {\r\n            ClientService.getClient(+match.params.id)\r\n            .then(client => setClient(client));\r\n    }, [match.params.id]);\r\n\r\n    return (\r\n        <div> \r\n            {client? (\r\n                <table className=\"container responsive-table centered table-detail\">\r\n                    <thead>\r\n                        <tr style={{color: \"black\"}}> \r\n                            <th>{client.Company_Name}\r\n                                <Link to={`/client-edit/${client.ClientId}`} className=\"btn right grey waves-effect waves-light\">\r\n                                  <i className=\"material-icons\">edit</i>\r\n                                </Link>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">{client.Language}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">{client.Email}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">Number: {client.Number}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">Adress: {client.Street + \" \" + client.ZipCode + \" \" + client.City}</td>\r\n                        </tr>\r\n                        \r\n                        {/* <tr>\r\n                            <td className=\"grey darken-2 m2 center border\">{client.Projects.map((P) => P.ProjectId) Is considered as null }</td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </table>\r\n\r\n                    \r\n        \r\n                ):(\r\n                    <h5>Pas de client trouv√©</h5>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientDetail;"]},"metadata":{},"sourceType":"module"}