{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\component\\\\client-and-project-card.tsx\";\nimport React from 'react';\nimport './card.css';\nimport { statut } from '../models/statut';\nimport { useHistory } from 'react-router-dom';\nimport ClientService from '../services/client-services';\nimport ProjectService from '../services/project-service';\nimport formatDate from '../helpers/format-date'; //import Actions from '../helpers/actions';\n\nconst BothCard = ({\n  project,\n  client\n}) => {\n  var st = statut[project.Statut];\n  const history = useHistory();\n\n  const goToClient = id => {\n    history.push(`/Client/${id}`);\n  };\n\n  const goToProject = id => {\n    history.push(`/Project/${id}`);\n  };\n\n  const deleteClient = () => {\n    ClientService.deleteClient(client).then(() => window.location.reload());\n  };\n\n  const deleteProject = () => {\n    ProjectService.deleteProject(project).then(() => window.location.reload());\n  };\n\n  const goToModifyProject = id => {\n    history.push(`/project-edit/${id}`);\n  };\n\n  const goToModifyClient = id => {\n    history.push(`/client-edit/${id}`);\n  };\n\n  var date; // obliged to do this code below, otherwise the formatDate doesn't work\n\n  if (project !== null) {\n    date = new Date(project.SignatureDate);\n  }\n\n  return React.createElement(\"tr\", {\n    className: \"\",\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, client ? React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, client.Company_Name, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-3 waves-effect waves-teal z-depth-3\",\n    onClick: () => goToClient(client.ClientId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Detail\"), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-2 waves-effect waves-teal z-depth-3\",\n    onClick: () => goToModifyClient(client.ClientId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Modif\"), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-1 waves-effect waves-teal z-depth-3\",\n    onClick: () => deleteClient(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Delete\")) : React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"No client assigned to this project\"), React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, project.ProjectNumber, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-3 waves-effect waves-teal z-depth-3\",\n    onClick: () => goToProject(project.ProjectId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Detail\"), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-2 waves-effect waves-teal z-depth-3\",\n    onClick: () => goToModifyProject(project.ProjectId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Modif\"), React.createElement(\"div\", {\n    className: \"button-list btn blue-grey darken-1 waves-effect waves-teal z-depth-3\",\n    onClick: () => deleteProject(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Delete\")), React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, formatDate(date)), React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, project ? project.ProjectLeader : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"no project\")), React.createElement(\"td\", {\n    className: \"grey darken-2 m2 center border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, st));\n};\n\nexport default BothCard;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/component/client-and-project-card.tsx"],"names":["React","statut","useHistory","ClientService","ProjectService","formatDate","BothCard","project","client","st","Statut","history","goToClient","id","push","goToProject","deleteClient","then","window","location","reload","deleteProject","goToModifyProject","goToModifyClient","date","Date","SignatureDate","color","Company_Name","ClientId","ProjectNumber","ProjectId","ProjectLeader"],"mappings":"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","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport Project from '../models/project';\r\nimport Client from '../models/client';\r\nimport  './card.css';\r\nimport { statut } from '../models/statut';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ClientService from '../services/client-services';\r\nimport ProjectService from '../services/project-service';\r\nimport formatDate from '../helpers/format-date';\r\n//import Actions from '../helpers/actions';\r\n\r\ntype Props = {\r\n    project: Project,\r\n    client: Client\r\n};\r\n\r\nconst BothCard: FunctionComponent<Props> = ({project,client}) => {\r\n    var st: string = statut[project.Statut];\r\n    const history = useHistory();\r\n\r\n    const goToClient = (id:number) => {\r\n        history.push(`/Client/${id}`);\r\n     }\r\n\r\n     const goToProject = (id:number) => {\r\n         history.push(`/Project/${id}`);\r\n     }\r\n\r\n    const deleteClient = () =>  {\r\n        ClientService.deleteClient(client)\r\n        .then(() => window.location.reload());\r\n      }\r\n\r\n      const deleteProject = () => {\r\n        ProjectService.deleteProject(project)\r\n        .then(() => window.location.reload());\r\n\r\n    }\r\n\r\n    const goToModifyProject = (id: number) => {\r\n        history.push(`/project-edit/${id}`);\r\n    }\r\n\r\n    const goToModifyClient = (id: number) => {\r\n        history.push(`/client-edit/${id}`);\r\n    }\r\n    \r\n    var date; // obliged to do this code below, otherwise the formatDate doesn't work\r\n    if (project !== null) {\r\n     date = new Date(project.SignatureDate);\r\n    }\r\n\r\n    return (\r\n                <tr className=\"\" style={{color: \"white\"}}>\r\n                    {client?\r\n                    <td className=\"grey darken-2 m2 center border\">{client.Company_Name} <br/>\r\n                    <div  className=\"button-list btn blue-grey darken-3 waves-effect waves-teal z-depth-3\" onClick={() => goToClient(client.ClientId)}>Detail</div>\r\n                    <div  className=\"button-list btn blue-grey darken-2 waves-effect waves-teal z-depth-3\" onClick={() => goToModifyClient(client.ClientId)}>Modif</div>\r\n                    <div  className=\"button-list btn blue-grey darken-1 waves-effect waves-teal z-depth-3\" onClick={() => deleteClient()}>Delete</div>\r\n                    </td>\r\n                    :\r\n                    <td className=\"grey darken-2 m2 center border\">No client assigned to this project</td>\r\n                    }\r\n\r\n                    <td className=\"grey darken-2 m2 center border\">{project.ProjectNumber}<br/>\r\n                    <div  className=\"button-list btn blue-grey darken-3 waves-effect waves-teal z-depth-3\" onClick={() => goToProject(project.ProjectId)}>Detail</div>\r\n                    <div  className=\"button-list btn blue-grey darken-2 waves-effect waves-teal z-depth-3\" onClick={() => goToModifyProject(project.ProjectId)}>Modif</div>\r\n                    <div  className=\"button-list btn blue-grey darken-1 waves-effect waves-teal z-depth-3\" onClick={() => deleteProject()}>Delete</div>\r\n\r\n                    </td>\r\n                    <td className=\"grey darken-2 m2 center border\">{formatDate(date)}</td>\r\n                    <td className=\"grey darken-2 m2 center border\">{project?\r\n                    (project.ProjectLeader):(<p>no project</p>)\r\n                    }</td>\r\n                    <td className=\"grey darken-2 m2 center border\">{st}</td>\r\n                </tr>\r\n           \r\n    )\r\n\r\n}\r\n\r\nexport default BothCard;\r\n"]},"metadata":{},"sourceType":"module"}