{"ast":null,"code":"import './list.css';\nimport { useClients } from '../hooks/clients-hook';\nexport const BothList = () => {\n  const clients = useClients();\n  /*\r\n      1) récupérer id client et retourner le client\r\n      2) stocker la fk du projet du client en question\r\n      3) récupérer le projet dont l'id est retourné par l'étape précédente\r\n      4) retourner l'objet\r\n  */\n  // const GetProject = (idCLient: number): Project | null | undefined => {\n  //     //1 \n  //     var Cli = useClient(idCLient); \n  //     //2\n  //      var FKProject:number|null|undefined = (Cli?.ProjectId !== undefined)? Cli.ProjectId :null;\n  //     //3\n  //      var Pro:Project|undefined|null = useProject(FKProject);\n  //     //4\n  //      return Pro;\n  // }\n\n  return null // <div className=\"col grid\">\n  //     { \n  //         clients.map((C) => <CandP key={C.ClientId} client={C} project={\n  //                 GetProject(C.ClientId)\n  //         }/>)\n  //     }\n  // </div>\n  ;\n};","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/bothlist.tsx"],"names":["useClients","BothList","clients"],"mappings":"AAKA,OAAO,YAAP;AAEA,SAASA,UAAT,QAA2B,uBAA3B;AAIA,OAAO,MAAMC,QAA2B,GAAG,MAAK;AAC5C,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AAEA;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAS,IAAT,CACI;AACA;AACA;AACA;AACA;AACA;AAEA;AARJ;AAUH,CAhCM","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport CandP from '../component/client-and-project-card';\r\nimport Project from '../models/project';\r\nimport Client from '../models/client';\r\nimport ClientService from '../services/client-services';\r\nimport './list.css';\r\nimport { useProjects } from '../hooks/projects-hook';\r\nimport { useClients } from '../hooks/clients-hook';\r\nimport { useClient } from '../hooks/client-hook';\r\nimport { useProject } from '../hooks/project-hook';\r\n\r\nexport const BothList: FunctionComponent = () =>{\r\n    const clients = useClients();\r\n\r\n    /*\r\n        1) récupérer id client et retourner le client\r\n        2) stocker la fk du projet du client en question\r\n        3) récupérer le projet dont l'id est retourné par l'étape précédente\r\n        4) retourner l'objet\r\n    */\r\n\r\n    // const GetProject = (idCLient: number): Project | null | undefined => {\r\n    //     //1 \r\n    //     var Cli = useClient(idCLient); \r\n    //     //2\r\n    //      var FKProject:number|null|undefined = (Cli?.ProjectId !== undefined)? Cli.ProjectId :null;\r\n    //     //3\r\n    //      var Pro:Project|undefined|null = useProject(FKProject);\r\n    //     //4\r\n    //      return Pro;\r\n\r\n    // }\r\n\r\n    return ( null\r\n        // <div className=\"col grid\">\r\n        //     { \r\n        //         clients.map((C) => <CandP key={C.ClientId} client={C} project={\r\n        //                 GetProject(C.ClientId)\r\n        //         }/>)\r\n        //     }\r\n            \r\n        // </div>\r\n    )\r\n} \r\n\r\n"]},"metadata":{},"sourceType":"module"}