{"ast":null,"code":"import Project from '../models/project';\nexport default class ProjectService {\n  static async getProjects() {\n    try {\n      const response = await fetch('http://localhost:44331/api/Projects', {\n        method: 'GET',\n        body: JSON.stringify(Project),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return await response.json();\n    } catch (error) {\n      return null; //this.handleError(error);\n    }\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/services/project-service.ts"],"names":["Project","ProjectService","getProjects","response","fetch","method","body","JSON","stringify","headers","json","error","isEmpty","data","Object","keys","length","handleError","console"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mBAApB;AAEA,eAAe,MAAMC,cAAN,CAAoB;AAE/B,eAAaC,WAAb,GAA+C;AAC3C,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AAChEC,QAAAA,MAAM,EAAE,KADwD;AAEhEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAF0D;AAGhES,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAHuD,OAAxC,CAA5B;AAKA,aAAO,MAAMN,QAAQ,CAACO,IAAT,EAAb;AACH,KAPD,CAQA,OAAOC,KAAP,EAAc;AACV,aAAO,IAAP,CADU,CACI;AACjB;AACF;;AAID,SAAOC,OAAP,CAAeC,IAAf,EAAsC;AACpC,WAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,MAAlB,KAA6B,CAApC;AACD;;AAED,SAAOC,WAAP,CAAmBN,KAAnB,EAAuC;AACrCO,IAAAA,OAAO,CAACP,KAAR,CAAcA,KAAd;AACD;;AAxB4B","sourcesContent":["import Project from '../models/project';\r\n\r\nexport default class ProjectService{ \r\n    \r\n    static async getProjects(): Promise<Project[]> {\r\n        try {\r\n            const response = await fetch('http://localhost:44331/api/Projects', {\r\n                method: 'GET',\r\n                body: JSON.stringify(Project),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n            return await response.json();\r\n        }\r\n        catch (error) {\r\n            return null ; //this.handleError(error);\r\n        }\r\n      }\r\n\r\n\r\n\r\n      static isEmpty(data: Object): boolean {\r\n        return Object.keys(data).length === 0;\r\n      }\r\n    \r\n      static handleError(error: Error): void {\r\n        console.error(error);\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}