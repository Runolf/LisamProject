{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\component\\\\project-search.tsx\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../services/project-service';\n\nconst ProjectSearch = () => {\n  const [term, setTerm] = useState(''); // terme chercher par le user\n\n  const [projects, SetProjects] = useState([]); // sert a stocker les projects correspondant à la recherche\n\n  const handleInputChange = e => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if (term.length <= 1) {\n      // si term fait moins que 2 char, on retourne un tableau vide\n      SetProjects([]);\n      return;\n    }\n\n    ProjectService.searchProject(term).then(Projects => SetProjects(Projects));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"SearchProject\",\n    id: \"SearchProject\",\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, projects.map(project => React.createElement(Link, {\n    key: project.ProjectId,\n    to: `/Project/${project.ProjectId}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, project.ProjectNumber))));\n};\n\nexport default ProjectSearch;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/component/project-search.tsx"],"names":["React","useState","Link","ProjectService","ProjectSearch","term","setTerm","projects","SetProjects","handleInputChange","e","target","value","length","searchProject","then","Projects","map","project","ProjectId","ProjectNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;;AAGA,MAAMC,aAAgC,GAAG,MAAM;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAS,EAAT,CAAhC,CAF2C,CAEG;;AAC9C,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAa,EAAb,CAAxC,CAH2C,CAGe;;AAE1D,QAAMQ,iBAAiB,GAAIC,CAAD,IAAkD;AACpE,UAAML,IAAI,GAAGK,CAAC,CAACC,MAAF,CAASC,KAAtB;AACAN,IAAAA,OAAO,CAACD,IAAD,CAAP;;AAEA,QAAGA,IAAI,CAACQ,MAAL,IAAe,CAAlB,EAAoB;AAAY;AAC5BL,MAAAA,WAAW,CAAC,EAAD,CAAX;AACA;AACH;;AACDL,IAAAA,cAAc,CAACW,aAAf,CAA6BT,IAA7B,EAAmCU,IAAnC,CAAwCC,QAAQ,IAAIR,WAAW,CAACQ,QAAD,CAA/D;AACP,GATD;;AAWA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,eAAxB;AAAwC,IAAA,EAAE,EAAC,eAA3C;AAA2D,IAAA,QAAQ,EAAEN,CAAC,IAAID,iBAAiB,CAACC,CAAD,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,CAACU,GAAT,CAAcC,OAAD,IACV,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,OAAO,CAACC,SAAnB;AAA8B,IAAA,EAAE,EAAG,YAAWD,OAAO,CAACC,SAAU,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,CAACE,aADb,CADH,CADL,CAFJ,CAFJ;AAaH,CA7BD;;AA+BA,eAAehB,aAAf","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Projects from '../models/project';\r\nimport ProjectService from '../services/project-service';\r\nimport { useProjects } from '../hooks/projects-hook';\r\n\r\nconst ProjectSearch: FunctionComponent = () => {\r\n    \r\n    const [term, setTerm] = useState<string>(''); // terme chercher par le user\r\n    const [projects, SetProjects] = useState<Projects[]>([]); // sert a stocker les projects correspondant à la recherche\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n            const term = e.target.value;\r\n            setTerm(term);\r\n\r\n            if(term.length <= 1){           // si term fait moins que 2 char, on retourne un tableau vide\r\n                SetProjects([]);\r\n                return;\r\n            }\r\n            ProjectService.searchProject(term).then(Projects => SetProjects(Projects));\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <input type=\"text\" name=\"SearchProject\" id=\"SearchProject\" onChange={e => handleInputChange(e)}/>\r\n            <div>\r\n                {projects.map((project) => (\r\n                    <Link key={project.ProjectId} to={`/Project/${project.ProjectId}`} >\r\n                        {project.ProjectNumber}\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSearch;"]},"metadata":{},"sourceType":"module"}