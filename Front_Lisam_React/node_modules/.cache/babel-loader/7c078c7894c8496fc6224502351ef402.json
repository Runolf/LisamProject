{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\component\\\\project-form.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport ProjectService from '../services/project-service';\nimport { useProjects } from '../hooks/projects-hook';\nimport '../pages/form.css';\nimport { useClients } from '../hooks/clients-hook'; // import Select from 'react-select';\n\nimport { statut } from '../models/statut';\n\nconst ProjectForm = ({\n  project,\n  isEditForm\n}) => {\n  const [form, setForm] = useState({\n    projectLeader: {\n      value: project.ProjectLeader\n    },\n    projectNumber: {\n      value: project.ProjectNumber\n    },\n    signatureDate: {\n      value: project.SignatureDate\n    },\n    statut: {\n      value: project.Statut\n    },\n    clientId: {\n      value: project.ClientId\n    }\n  });\n  const history = useHistory();\n  const Projects = useProjects();\n  const Clients = useClients();\n\n  const transformDateToFormDate = date => {\n    return date.slice(0, 10);\n  };\n\n  const updateProject = () => {\n    ProjectService.updateProject(project).then(() => history.push(`/project/${project.ProjectId}`)\n    /*window.location.reload()*/\n    );\n  };\n\n  const addProject = () => {\n    ProjectService.addProject(project).then(() => history.push(`/both`));\n  };\n\n  const deleteProject = () => {\n    ProjectService.deleteProject(project).then(() => history.push(`/project`));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormIsValid = validateForm();\n\n    if (isFormIsValid === true) {\n      project.ProjectLeader = form.projectLeader.value;\n      project.ProjectNumber = form.projectNumber.value;\n      project.SignatureDate = form.signatureDate.value;\n      project.Statut = form.statut.value;\n      project.ClientId = form.clientId.value;\n      isEditForm ? updateProject() : addProject();\n    }\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const handleSelectChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const validateForm = () => {\n    let newForm = form;\n    const noValue = \"no value\";\n    const stringRegex = /^[A-Za-zéèàùç\\- ]+$/;\n    const numberRegex = /^[0-9 ]+$/; // PROJECT LEADER VALIDATOR\n\n    const ProjectLeader = form.projectLeader.value;\n\n    if (!stringRegex.test(ProjectLeader) || ProjectLeader === noValue || ProjectLeader === \"\") {\n      const errorMsg = \"enter valid name\";\n      const newField = {\n        value: form.projectLeader.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          projectLeader: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.projectLeader.value,\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          projectLeader: newField\n        }\n      };\n    } //STATUT VALIDATOR\n\n\n    const validStatut = /^[1-5]$/;\n\n    if (!validStatut.test(form.statut.value)) {\n      const errorMsg = \"choose a statut\";\n      const newField = {\n        value: form.statut.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          statut: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.statut.value,\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          statut: newField\n        }\n      };\n    } // PROJECT NUMBER VALIDATOR\n\n\n    const PNumber = Projects.map(P => P.ProjectNumber);\n    var ProjectExist = false;\n    const number = form.projectNumber.value;\n\n    if (!isEditForm) {\n      for (let test of PNumber) {\n        if (number.toUpperCase() === test.toUpperCase()) {\n          ProjectExist = true;\n          break;\n        }\n      }\n    }\n\n    if (isEditForm && number.toUpperCase() !== project.ProjectNumber.toUpperCase()) {\n      for (let test of PNumber) {\n        if (number.toUpperCase() === test.toUpperCase()) {\n          ProjectExist = true;\n          break;\n        }\n      }\n    }\n\n    if (!numberRegex.test(number) || ProjectExist === true || number === noValue || number === \"\") {\n      const errorMsg = \"Project number exist or is invalid\";\n      const newField = {\n        value: form.projectNumber.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          projectNumber: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.projectNumber.value,\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          projectNumber: newField\n        }\n      };\n    } // ID CLIENT VALIDATOR\n\n\n    const validClient = /^[0-9]+$/;\n    var idExist = false;\n    var idS = Clients.map(C => C.ClientId);\n\n    for (let test of idS) {\n      if (form.clientId.value === test.toString()) {\n        idExist = true;\n        break;\n      }\n    }\n\n    if (!validClient.test(form.clientId.value) || form.clientId.value === \"0\" || !idExist) {\n      const errorMsg = \"Id Client is equal or below to 0 or must be a number\";\n      const newField = {\n        value: form.clientId.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          clientId: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.clientId.value,\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          clientId: newField\n        }\n      };\n    } // DATE VALIDATOR\n\n\n    var today = new Date();\n    var dd = today.getDate().toString().padStart(2, '0');\n    var mm = (today.getMonth() + 1).toString().padStart(2, '0');\n    var yyyy = today.getFullYear().toString();\n    var currentDate = yyyy + \"-\" + mm + \"-\" + dd;\n    today.setHours(0, 0, 0, 0);\n    const formDate = form.signatureDate.value;\n\n    if (formDate.toString() > currentDate) {\n      const errorMsg = \"Date must be lesser or equal to current date\";\n      const newField = {\n        value: form.signatureDate.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          signatureDate: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.signatureDate.value,\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          signatureDate: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.statut.isValid && newForm.projectNumber.isValid && newForm.clientId.isValid && newForm.signatureDate.isValid && newForm.projectLeader.isValid === true ? true : false;\n  };\n\n  const test = () => {\n    Clients.forEach(function (c) {\n      return React.createElement(\"option\", {\n        value: c.ClientId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, c.Company_Name);\n    });\n  };\n\n  return React.createElement(\"form\", {\n    className: \"container\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, isEditForm ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"center\",\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Edit \", project.ProjectNumber, React.createElement(\"span\", {\n    className: \"btn-floating right waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons grey\",\n    onClick: deleteProject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"delete\")))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"center\",\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Add project\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, form.projectNumber.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"projectNumber\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"project Number: \", form.projectNumber.error) : React.createElement(\"label\", {\n    htmlFor: \"projectNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"project Number\"), React.createElement(\"input\", {\n    id: \"projectNumber\",\n    name: \"projectNumber\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"no-value\",\n    value: form.projectNumber.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, form.projectLeader.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"projectLeader\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"project Leader: \", form.projectLeader.error) : React.createElement(\"label\", {\n    htmlFor: \"projectLeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"project Leader\"), React.createElement(\"input\", {\n    id: \"projectLeader\",\n    name: \"projectLeader\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.projectLeader.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, form.statut.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"statut\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, form.statut.error) : React.createElement(\"label\", {\n    htmlFor: \"statut\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"statut\"), React.createElement(\"select\", {\n    name: \"statut\",\n    id: \"statut\",\n    className: \"browser-default\",\n    value: form.statut.value,\n    onChange: e => handleSelectChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"--choose a value--\"), React.createElement(\"option\", {\n    value: statut.Closed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Closed\"), React.createElement(\"option\", {\n    value: statut.Factured,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Factured\"), React.createElement(\"option\", {\n    value: statut.Open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Open\"), React.createElement(\"option\", {\n    value: statut.Signed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Signed\"), React.createElement(\"option\", {\n    value: statut.Work_in_progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Work in progress\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), isEditForm ? React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, form.signatureDate.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"signatureDate\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"signature Date : \", form.signatureDate.error) : React.createElement(\"label\", {\n    htmlFor: \"signatureDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"signature Date\"), React.createElement(\"input\", {\n    id: \"signatureDate\",\n    name: \"signatureDate\",\n    type: \"date\",\n    className: \"form-control\",\n    value: transformDateToFormDate(form.signatureDate.value),\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, form.signatureDate.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"signatureDate\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"signature Date : \", form.signatureDate.error) : React.createElement(\"label\", {\n    htmlFor: \"signatureDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"signature Date\"), React.createElement(\"input\", {\n    id: \"signatureDate\",\n    name: \"signatureDate\",\n    type: \"date\",\n    className: \"form-control\",\n    value: form.signatureDate.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, form.clientId.isValid === false ? React.createElement(\"label\", {\n    htmlFor: \"Client\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Client: \", form.clientId.error) : React.createElement(\"label\", {\n    htmlFor: \"Client\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Client\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/client\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"List of clients by identifiant\"), React.createElement(\"input\", {\n    id: \"Client\",\n    name: \"clientId\",\n    value: form.clientId.value,\n    type: \"number\",\n    className: \"form-control\",\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"SelectClient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Client SELECT\"), React.createElement(\"select\", {\n    name: \"clientId\",\n    id: \"SelectClient\",\n    className: \"browser-default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"1\"), test() //  Clients.forEach(function(c){\n  //    return <option value={c.ClientId}>{c.Company_Name}</option>\n  //  })\n  ), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn grey darken-3 waves-effect waves-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default ProjectForm;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/component/project-form.tsx"],"names":["React","useState","useHistory","Link","ProjectService","useProjects","useClients","statut","ProjectForm","project","isEditForm","form","setForm","projectLeader","value","ProjectLeader","projectNumber","ProjectNumber","signatureDate","SignatureDate","Statut","clientId","ClientId","history","Projects","Clients","transformDateToFormDate","date","slice","updateProject","then","push","ProjectId","addProject","deleteProject","handleSubmit","e","preventDefault","isFormIsValid","validateForm","handleInputChange","fieldName","target","name","fieldValue","newField","handleSelectChange","newForm","noValue","stringRegex","numberRegex","test","errorMsg","error","isValid","validStatut","PNumber","map","P","ProjectExist","number","toUpperCase","validClient","idExist","idS","C","toString","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","currentDate","setHours","formDate","forEach","c","Company_Name","color","Closed","Factured","Open","Signed","Work_in_progress"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Project from '../models/project';\r\nimport{useHistory, Link} from 'react-router-dom';\r\nimport ProjectService from '../services/project-service';\r\nimport Client from '../models/client';\r\nimport { useProjects } from '../hooks/projects-hook';\r\nimport '../pages/form.css'; \r\nimport { useClients } from '../hooks/clients-hook';\r\n// import Select from 'react-select';\r\nimport { statut } from '../models/statut';\r\n\r\ntype Props = {\r\n    project: Project,\r\n    client: Client,\r\n    isEditForm: Boolean\r\n}\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?:string,\r\n    isValid?: boolean\r\n  }\r\n\r\ntype Form = {\r\n    projectNumber: Field,\r\n    projectLeader: Field,   \r\n    statut: Field,\r\n    signatureDate: Field,\r\n    clientId: Field\r\n}\r\n\r\nconst ProjectForm: FunctionComponent<Props> = ({project,isEditForm}) => {\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        projectLeader: {value: project.ProjectLeader},\r\n        projectNumber: {value: project.ProjectNumber},\r\n        signatureDate: {value: project.SignatureDate},\r\n        statut:        {value: project.Statut},\r\n        clientId :     {value: project.ClientId }\r\n    });\r\n    const history = useHistory();\r\n    const Projects = useProjects();\r\n    const Clients = useClients(); \r\n    \r\n   \r\n    const transformDateToFormDate = (date: string): string => {\r\n        return date.slice(0,10);\r\n    }\r\n    const updateProject = () => {\r\n        ProjectService.updateProject(project)\r\n        .then(() => history.push(`/project/${project.ProjectId}`) /*window.location.reload()*/);\r\n    }\r\n    const addProject = () => {\r\n        ProjectService.addProject(project)\r\n        .then(() => history.push(`/both`));\r\n    }\r\n    const deleteProject = () => {\r\n        ProjectService.deleteProject(project)\r\n        .then(() => history.push(`/project`));\r\n    }\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault();\r\n        const isFormIsValid = validateForm();\r\n        if(isFormIsValid=== true){\r\n\r\n            project.ProjectLeader = form.projectLeader.value;\r\n            project.ProjectNumber = form.projectNumber.value;\r\n            project.SignatureDate = form.signatureDate.value;\r\n            project.Statut = form.statut.value;\r\n            project.ClientId = form.clientId.value;\r\n\r\n            isEditForm?updateProject():addProject();\r\n        }\r\n        \r\n    }\r\n    const handleInputChange = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string|number = e.target.value;\r\n\r\n        const newField: Field = {[fieldName] : {value: fieldValue}};\r\n        setForm({...form, ...newField});\r\n    }\r\n    const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n         const fieldName: string = e.target.name;\r\n         const fieldValue: string = e.target.value;\r\n\r\n         const newField: Field = {[fieldName] : {value: fieldValue}};\r\n         setForm({...form, ...newField});\r\n    }\r\n    const validateForm = () => {\r\n      \r\n        let newForm: Form = form;\r\n        const noValue: string = \"no value\";\r\n        const stringRegex: RegExp = /^[A-Za-zéèàùç\\- ]+$/;\r\n        const numberRegex: RegExp = /^[0-9 ]+$/;\r\n\r\n        // PROJECT LEADER VALIDATOR\r\n        const ProjectLeader: string = form.projectLeader.value;\r\n        if(!stringRegex.test(ProjectLeader) || ProjectLeader === noValue || ProjectLeader === \"\"){\r\n            const errorMsg:string = \"enter valid name\";\r\n            const newField: Field = {value: form.projectLeader.value, error: errorMsg, isValid: false};\r\n            newForm = {...newForm, ...{projectLeader: newField}};\r\n        }else{\r\n            const newField: Field = {value: form.projectLeader.value, isValid: true};\r\n            newForm = {...newForm, ...{projectLeader: newField}};\r\n        }\r\n\r\n        //STATUT VALIDATOR\r\n        const validStatut:RegExp = /^[1-5]$/;\r\n        if(!validStatut.test(form.statut.value)){\r\n            const errorMsg:string = \"choose a statut\";\r\n            const newField: Field = {value: form.statut.value, error: errorMsg, isValid: false};\r\n            newForm = {...newForm, ...{statut: newField}};\r\n        }else{\r\n         const newField: Field = {value: form.statut.value, isValid: true};\r\n         newForm = {...newForm, ...{statut: newField}};\r\n        }\r\n        \r\n        // PROJECT NUMBER VALIDATOR\r\n        const PNumber = Projects.map(P => P.ProjectNumber);\r\n        var ProjectExist: boolean = false;\r\n        const number: string = form.projectNumber.value;\r\n\r\n        if(!isEditForm){\r\n            for(let test of PNumber){\r\n                if(number.toUpperCase() === test.toUpperCase()){\r\n                    ProjectExist = true;\r\n                    break;\r\n                }\r\n            }   \r\n        }\r\n\r\n        if(isEditForm && number.toUpperCase() !==  project.ProjectNumber.toUpperCase()){\r\n            for(let test of PNumber){\r\n                if(number.toUpperCase() === test.toUpperCase()){\r\n                    ProjectExist = true;\r\n                    break;\r\n                }\r\n            }   \r\n        }\r\n    \r\n        if(!numberRegex.test(number) || ProjectExist === true || number === noValue || number === \"\"){\r\n            const errorMsg:string = \"Project number exist or is invalid\";\r\n            const newField: Field = {value: form.projectNumber.value, error: errorMsg, isValid: false};\r\n            newForm = {...newForm, ...{projectNumber: newField}};\r\n        }else{\r\n            const newField: Field = {value: form.projectNumber.value, isValid: true};\r\n            newForm = {...newForm, ...{projectNumber: newField}};\r\n        }\r\n        \r\n        // ID CLIENT VALIDATOR\r\n        const validClient: RegExp = /^[0-9]+$/;\r\n        var idExist: boolean = false; \r\n        var idS = Clients.map(C => C.ClientId);\r\n        for(let test of idS){\r\n            if(form.clientId.value === test.toString()){\r\n                idExist = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!validClient.test(form.clientId.value) || form.clientId.value === \"0\" || !idExist){\r\n            const errorMsg:string = \"Id Client is equal or below to 0 or must be a number\";\r\n            const newField: Field = {value: form.clientId.value, error: errorMsg, isValid: false};\r\n            newForm = {...newForm, ...{clientId: newField}};\r\n        }else{\r\n            const newField: Field = {value: form.clientId.value, isValid: true};\r\n            newForm = {...newForm, ...{clientId: newField}};\r\n        }\r\n        \r\n        // DATE VALIDATOR\r\n        var today:Date = new Date();\r\n        var dd = today.getDate().toString().padStart(2, '0');\r\n        var mm = (today.getMonth() + 1).toString().padStart(2, '0');\r\n        var yyyy = today.getFullYear().toString();\r\n        var currentDate:String = yyyy + \"-\" + mm + \"-\" + dd;\r\n        today.setHours(0,0,0,0);\r\n\r\n        const formDate:Date = form.signatureDate.value;\r\n       \r\n        if(formDate.toString() > currentDate){\r\n            const errorMsg:string = \"Date must be lesser or equal to current date\";\r\n            const newField: Field = {value: form.signatureDate.value, error: errorMsg, isValid: false};\r\n            newForm = {...newForm, ...{signatureDate: newField}};\r\n        }else{\r\n            const newField: Field = {value: form.signatureDate.value, isValid: true};\r\n            newForm = {...newForm, ...{signatureDate: newField}};\r\n        }\r\n\r\n        setForm(newForm);\r\n \r\n        return (\r\n            newForm.statut.isValid && \r\n            newForm.projectNumber.isValid && \r\n            newForm.clientId.isValid  && \r\n            newForm.signatureDate.isValid &&\r\n            newForm.projectLeader.isValid === true\r\n            )?true:false;\r\n     }\r\n\r\n     const test = () => {\r\n        Clients.forEach(function(c){\r\n            return <option value={c.ClientId}>{c.Company_Name}</option>\r\n          })\r\n     }\r\n\r\n    return(\r\n        <form className=\"container\" onSubmit={e => handleSubmit(e)}>\r\n\r\n            <div>{/*is editForm */}\r\n                <div> \r\n                        {isEditForm? (\r\n                            <div>\r\n                                <h3 className=\"center\" style={{color: 'black'}}>Edit {project.ProjectNumber}\r\n                                <span className=\"btn-floating right waves-effect waves-light\">\r\n                                    <i className=\"material-icons grey\" onClick={deleteProject}>delete</i>\r\n                                </span>\r\n                                </h3>\r\n\r\n                            </div>\r\n                        ):(\r\n                            <div>\r\n                                <h3 className=\"center\" style={{color: 'black'}}>Add project</h3>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <br/><br/>\r\n\r\n            {/*Project number*/}\r\n            <div className=\"form-group\">\r\n                { \r\n                    form.projectNumber.isValid===false?<label htmlFor=\"projectNumber\" style={{color: 'red'}}>project Number: {form.projectNumber.error}</label>\r\n                    : <label htmlFor=\"projectNumber\">project Number</label>\r\n                }\r\n               <input id=\"projectNumber\" name=\"projectNumber\" type=\"text\" className=\"form-control\" placeholder=\"no-value\" value={form.projectNumber.value} onChange={e => handleInputChange(e)}></input>\r\n            </div>\r\n\r\n            {/*Project leader*/}\r\n            <div className=\"form-group\">\r\n            {form.projectLeader.isValid === false?<label htmlFor=\"projectLeader\"  style={{color: 'red'}}>project Leader: {form.projectLeader.error}</label>:<label htmlFor=\"projectLeader\">project Leader</label> }\r\n              \r\n               <input id=\"projectLeader\" name=\"projectLeader\" type=\"text\" className=\"form-control\" value={form.projectLeader.value} onChange={e => handleInputChange(e)}></input>\r\n            </div>\r\n\r\n            {/*status*/}\r\n            {/* <div className=\"form-group\">\r\n            {form.statut.isValid === false?<label htmlFor=\"statut\"  style={{color: 'red'}}>{form.statut.error}1 open | 2 signed | 3 factured | 4 work in progress | 5 closed</label> : <label htmlFor=\"statut\">statut: 1 open | 2 signed | 3 factured | 4 work in progress | 5 closed</label> }\r\n              \r\n               <input id=\"statut\" name=\"statut\" type=\"text\" className=\"form-control\" value={form.statut.value} onChange={e => handleInputChange(e)}></input>\r\n        \r\n            </div> */}\r\n            <br/> \r\n            \r\n            {/*Select Statuts*/}\r\n             <div>\r\n             {form.statut.isValid === false?<label htmlFor=\"statut\"  style={{color: 'red'}}>{form.statut.error}</label> : <label htmlFor=\"statut\">statut</label> }\r\n                <select name=\"statut\" id=\"statut\" className=\"browser-default\" value={form.statut.value} onChange={e => handleSelectChange(e)}>\r\n                    <option value=\"\">--choose a value--</option>\r\n                    <option value={statut.Closed}>Closed</option>\r\n                    <option value={statut.Factured}>Factured</option>\r\n                    <option value={statut.Open}>Open</option>\r\n                    <option value={statut.Signed}>Signed</option>\r\n                    <option value={statut.Work_in_progress}>Work in progress</option>\r\n                </select>\r\n            </div>\r\n         <br/>\r\n\r\n            \r\n            {/*Signature date*/}\r\n            {isEditForm? \r\n                <div className=\"form-group\">\r\n                    {form.signatureDate.isValid === false?<label htmlFor=\"signatureDate\" style={{color: 'red'}}>signature Date : {form.signatureDate.error}</label>:<label htmlFor=\"signatureDate\">signature Date</label>}             \r\n                    <input id=\"signatureDate\" name=\"signatureDate\" type=\"date\" className=\"form-control\" value={transformDateToFormDate(form.signatureDate.value)} onChange={e => handleInputChange(e)}></input>\r\n                </div>\r\n                :\r\n                <div className=\"form-group\">\r\n                    {form.signatureDate.isValid === false?<label htmlFor=\"signatureDate\" style={{color: 'red'}}>signature Date : {form.signatureDate.error}</label>:<label htmlFor=\"signatureDate\">signature Date</label>}             \r\n                    <input id=\"signatureDate\" name=\"signatureDate\" type=\"date\" className=\"form-control\" value={form.signatureDate.value} onChange={e => handleInputChange(e)}></input>\r\n                </div>\r\n            }\r\n\r\n            {/*ClientId*/}\r\n            <div className=\"form-group\">\r\n            { form.clientId.isValid === false?<label htmlFor=\"Client\" style={{color: 'red'}}>Client: {form.clientId.error}</label>:<label htmlFor=\"Client\">Client</label>}\r\n                 <br/>\r\n                <Link to=\"/client\" target=\"_blank\">List of clients by identifiant</Link>\r\n                <input id=\"Client\" name=\"clientId\" value={form.clientId.value } type=\"number\" className=\"form-control\" onChange={e => handleInputChange(e)}></input>\r\n            </div>\r\n\r\n            <label htmlFor=\"SelectClient\">Client SELECT</label>\r\n            <select name=\"clientId\" id=\"SelectClient\" className=\"browser-default\">\r\n                \r\n                <option value=\"1\">1</option>\r\n                { test()\r\n                    //  Clients.forEach(function(c){\r\n                    //    return <option value={c.ClientId}>{c.Company_Name}</option>\r\n                    //  })\r\n                }\r\n                \r\n            </select>\r\n            <button type=\"submit\" className=\"btn grey darken-3 waves-effect waves-black\">Submit</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm;\r\n"]},"metadata":{},"sourceType":"module"}