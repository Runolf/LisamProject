{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\pages\\\\project-list.tsx\";\nimport React, { useState } from 'react';\nimport { useProjects } from '../hooks/projects-hook';\nimport ProjectCard from '../component/project-card';\nimport './list.css'; //import { useClient } from '../hooks/client-hook';\n\nimport SearchField from \"react-search-field\";\nimport ProjectService from '../services/project-service';\n\nconst List = () => {\n  const projects = useProjects(); //const client = useClient();\n\n  const [tairm, setTerm] = useState(''); // terme chercher par le user\n\n  const [pS, SetProjects] = useState([]); // sert a stocker les projects correspondant à la recherche\n\n  const handleInputChange = e => {\n    let term = \"\";\n\n    if (e.target.value !== undefined) {\n      term = e.target.value;\n    }\n\n    setTerm(term);\n\n    if (term.length <= 1) {\n      // si term fait moins que 2 char, on retourne un tableau vide\n      SetProjects([]);\n      return;\n    }\n\n    ProjectService.searchProject(tairm).then(Projects => SetProjects(pS));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(SearchField, {\n    placeholder: \"Search...\",\n    onChange: e => handleInputChange(e),\n    searchText: \"This is initial search text\",\n    classNames: \"test-class\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    className: \"container centered \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Project number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Project leader\"))), React.createElement(\"tbody\", {\n    className: \"row grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, projects.map(P => React.createElement(ProjectCard, {\n    key: P.ProjectId,\n    client: P.Client,\n    project: P,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/project-list.tsx"],"names":["React","useState","useProjects","ProjectCard","SearchField","ProjectService","List","projects","tairm","setTerm","pS","SetProjects","handleInputChange","e","term","target","value","undefined","length","searchProject","then","Projects","color","map","P","ProjectId","Client"],"mappings":";AAAA,OAAOA,KAAP,IAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,YAAP,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAGA,MAAMC,IAAuB,GAAG,MAAM;AAElC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAFkC,CAGlC;;AAEA,QAAM,CAACM,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAS,EAAT,CAAjC,CALkC,CAKa;;AAC/C,QAAM,CAACS,EAAD,EAAKC,WAAL,IAAoBV,QAAQ,CAAa,EAAb,CAAlC,CANkC,CAMkB;;AAEpD,QAAMW,iBAAiB,GAAIC,CAAD,IAAkD;AACxE,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmBC,SAAtB,EAAgC;AACzBH,MAAAA,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAhB;AACF;;AAEDP,IAAAA,OAAO,CAACK,IAAD,CAAP;;AAEA,QAAGA,IAAI,CAACI,MAAL,IAAe,CAAlB,EAAoB;AAAY;AAC5BP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACA;AACH;;AACDN,IAAAA,cAAc,CAACc,aAAf,CAA6BX,KAA7B,EAAoCY,IAApC,CAAyCC,QAAQ,IAAIV,WAAW,CAACD,EAAD,CAAhE;AACP,GAbD;;AAeA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,WAAW,EAAC,WADhB;AAEI,IAAA,QAAQ,EAAEG,CAAC,IAAID,iBAAiB,CAACC,CAAD,CAFpC;AAGI,IAAA,UAAU,EAAC,6BAHf;AAII,IAAA,UAAU,EAAC,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAE;AAAR,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,CADN,EAOO;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAf,QAAQ,CAACgB,GAAT,CAAcC,CAAD,IACV,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,CAAC,CAACC,SAApB;AAA+B,IAAA,MAAM,EAAED,CAAC,CAACE,MAAzC;AAAiD,IAAA,OAAO,EAAEF,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADA,CAPP,CARF,CADR;AA0BH,CAjDD;;AAmDA,eAAelB,IAAf","sourcesContent":["import React, {FunctionComponent, useState} from 'react';\r\nimport {useProjects} from '../hooks/projects-hook';\r\nimport ProjectCard from '../component/project-card';\r\nimport './list.css';\r\n//import { useClient } from '../hooks/client-hook';\r\nimport SearchField from \"react-search-field\";\r\nimport ProjectService from '../services/project-service';\r\nimport Projects from '../models/project';\r\n\r\nconst List: FunctionComponent = () => {\r\n\r\n    const projects = useProjects();\r\n    //const client = useClient();\r\n        \r\n    const [tairm, setTerm] = useState<string>(''); // terme chercher par le user\r\n    const [pS, SetProjects] = useState<Projects[]>([]); // sert a stocker les projects correspondant à la recherche\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let term = \"\";\r\n        if(e.target.value !== undefined){\r\n               term = e.target.value;\r\n            }\r\n           \r\n            setTerm(term);\r\n\r\n            if(term.length <= 1){           // si term fait moins que 2 char, on retourne un tableau vide\r\n                SetProjects([]);\r\n                return;\r\n            }\r\n            ProjectService.searchProject(tairm).then(Projects => SetProjects(pS));\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <SearchField \r\n                    placeholder=\"Search...\"\r\n                    onChange={e => handleInputChange(e)}\r\n                    searchText=\"This is initial search text\"\r\n                    classNames=\"test-class\"\r\n                \r\n                />\r\n              <table className=\"container centered \">\r\n                    <thead>\r\n                        <tr style={{color: \"black\"}}>\r\n                            <th>Project number</th>\r\n                            <th>Project leader</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody className=\"row grid\">\r\n                    {projects.map((P) =>\r\n                        <ProjectCard key={P.ProjectId} client={P.Client} project={P}/> \r\n                    )} \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}