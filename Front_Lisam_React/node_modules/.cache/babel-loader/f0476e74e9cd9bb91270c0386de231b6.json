{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\LisamProject\\\\Front_Lisam_React\\\\src\\\\component\\\\client-form.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ClientService from '../services/client-services';\n\nconst ClientForm = ({\n  client,\n  isEditForm\n}) => {\n  const [form, setForm] = useState({\n    companyName: {\n      value: client.Company_Name\n    },\n    email: {\n      value: client.Email\n    },\n    language: {\n      value: client.Language\n    },\n    number: {\n      value: client.Number\n    },\n    city: {\n      value: client.City\n    },\n    street: {\n      value: client.Street\n    },\n    zipCode: {\n      value: client.ZipCode\n    }\n  });\n  const history = useHistory();\n\n  const updateClient = () => {\n    ClientService.updateClient(client).then(() => history.push(`/client/${client.ClientId}`));\n  };\n\n  const addClient = () => {\n    ClientService.addClient(client).then(() => history.push(`/client`));\n  };\n\n  const deleteClient = () => {\n    ClientService.deleteClient(client).then(() => history.push(`/client`));\n  }; // const isAddForm = () => {\n  //     return !isEditForm;\n  // }\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    client.Company_Name = form.companyName.value;\n    client.Email = form.email.value;\n    client.Language = form.language.value;\n    client.Number = form.number.value;\n    client.City = form.city.value;\n    client.ZipCode = form.zipCode.value;\n    client.Street = form.street.value;\n    isEditForm ? updateClient() : addClient();\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  return React.createElement(\"form\", {\n    className: \"container\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, isEditForm ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Edit\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Adding\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"StatutSelect\"), React.createElement(\"select\", {\n    id: \"select\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"4\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"companyName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Company name\"), React.createElement(\"input\", {\n    id: \"companyName\",\n    name: \"companyName\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.companyName.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.email.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"number\"), React.createElement(\"input\", {\n    id: \"number\",\n    name: \"number\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.number.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"language\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"language\"), React.createElement(\"input\", {\n    id: \"language\",\n    name: \"language\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.language.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Adress\"), React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"city\"), React.createElement(\"input\", {\n    id: \"city\",\n    name: \"city\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.city.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"zipCode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"zip code\"), React.createElement(\"input\", {\n    id: \"zipCode\",\n    name: \"zipCode\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.zipCode.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"street\"), React.createElement(\"input\", {\n    id: \"street\",\n    name: \"street\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.street.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn grey darken-3 waves-effect waves-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Valider\"), React.createElement(\"span\", {\n    className: \"btn-floating right waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    onClick: deleteClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"delete\")));\n};\n\nexport default ClientForm;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/component/client-form.tsx"],"names":["React","useState","useHistory","ClientService","ClientForm","client","isEditForm","form","setForm","companyName","value","Company_Name","email","Email","language","Language","number","Number","city","City","street","Street","zipCode","ZipCode","history","updateClient","then","push","ClientId","addClient","deleteClient","handleSubmit","e","preventDefault","handleInputChange","fieldName","target","name","fieldValue","newField"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Client from '../models/client';\r\nimport{useHistory} from 'react-router-dom';\r\nimport ClientService from '../services/client-services';\r\n\r\ntype Props = {\r\n    client: Client,\r\n    isEditForm: Boolean\r\n}\r\n\r\ntype Field = {\r\n    value?: any, \r\n    error?:string, \r\n    isValid?: boolean\r\n  }\r\n\r\n  type Form = {\r\n    companyName: Field,\r\n    street: Field,\r\n    zipCode: Field,\r\n    city: Field, \r\n    email: Field,\r\n    language: Field,\r\n    number: Field,\r\n    //Projects: Field \r\n}\r\n\r\nconst ClientForm: FunctionComponent<Props> = ({client, isEditForm}) => {\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        companyName: {value: client.Company_Name}, \r\n        email: {value: client.Email},\r\n        language: {value: client.Language},\r\n        number: {value: client.Number},\r\n        city: {value: client.City},\r\n        street: {value: client.Street},\r\n        zipCode: {value: client.ZipCode}\r\n    });\r\n    const history = useHistory();\r\n\r\n    const updateClient = () => {\r\n        ClientService.updateClient(client)\r\n        .then(() => history.push(`/client/${client.ClientId}`));\r\n    }\r\n    const addClient = () => {\r\n        ClientService.addClient(client)\r\n        .then(() => history.push(`/client`));\r\n    }\r\n\r\n    const deleteClient = () =>  {\r\n        ClientService.deleteClient(client)\r\n        .then(() => history.push(`/client`));\r\n      }\r\n\r\n    // const isAddForm = () => {\r\n    //     return !isEditForm;\r\n    // }\r\n    \r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault();\r\n\r\n        client.Company_Name = form.companyName.value;\r\n        client.Email = form.email.value;\r\n        client.Language = form.language.value;\r\n        client.Number = form.number.value;\r\n        client.City = form.city.value;\r\n        client.ZipCode = form.zipCode.value;\r\n        client.Street = form.street.value;\r\n\r\n        isEditForm?updateClient():addClient();\r\n        \r\n    }\r\n\r\n    const handleInputChange = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n\r\n        const newField: Field = {[fieldName] : {value: fieldValue}};\r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n\r\n    return(\r\n        <form className=\"container\" onSubmit={e => handleSubmit(e)}>\r\n            <div>\r\n                <div>\r\n                        {isEditForm? (\r\n                            <div>\r\n                                <h3>Edit</h3>\r\n                                \r\n                            </div>\r\n                        ):(\r\n                            <div>\r\n                                <h3>Adding</h3>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"select\">StatutSelect</label>\r\n                <select id=\"select\" className=\"form-control\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"companyName\">Company name</label>\r\n                    <input id=\"companyName\" name=\"companyName\" type=\"text\" className=\"form-control\" value={form.companyName.value} onChange={e => handleInputChange(e)}></input>        \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input id=\"email\" name=\"email\" type=\"text\" className=\"form-control\" value={form.email.value} onChange={e => handleInputChange(e)}></input>        \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"number\">number</label>\r\n                    <input id=\"number\" name=\"number\" type=\"text\" className=\"form-control\" value={form.number.value} onChange={e => handleInputChange(e)}></input>        \r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"language\">language</label>\r\n                    <input id=\"language\" name=\"language\" type=\"text\" className=\"form-control\" value={form.language.value} onChange={e => handleInputChange(e)}></input>        \r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <h6>Adress</h6>\r\n                    <label htmlFor=\"city\">city</label>\r\n                    <input id=\"city\" name=\"city\" type=\"text\" className=\"form-control\" value={form.city.value} onChange={e => handleInputChange(e)}></input> \r\n                    <label htmlFor=\"zipCode\">zip code</label>\r\n                    <input id=\"zipCode\" name=\"zipCode\" type=\"text\" className=\"form-control\" value={form.zipCode.value} onChange={e => handleInputChange(e)}></input>       \r\n                    <label htmlFor=\"street\">street</label>\r\n                    <input id=\"street\" name=\"street\" type=\"text\" className=\"form-control\" value={form.street.value} onChange={e => handleInputChange(e)}></input>\r\n            </div>\r\n                            \r\n            <button type=\"submit\" className=\"btn grey darken-3 waves-effect waves-black\">Valider</button>\r\n            <span className=\"btn-floating right waves-effect waves-light\">\r\n               <i className=\"material-icons\" onClick={deleteClient}>delete</i>\r\n            </span>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default ClientForm;"]},"metadata":{},"sourceType":"module"}