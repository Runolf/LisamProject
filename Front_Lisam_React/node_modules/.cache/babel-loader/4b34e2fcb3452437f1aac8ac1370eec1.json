{"ast":null,"code":"// import React, {FunctionComponent} from 'react';\n// import CandP from '../component/client-and-project-card';\n// import Project from '../models/project';\n// import Client from '../models/client';\n// import './list.css';\n// import { useProject } from '../hooks/project-hook';\n// import { useClient } from '../hooks/client-hook';\n// import { isUndefined } from 'util';\n// export const BothList: FunctionComponent = () =>{\n//     const projects = useProject();\n//     const clients = useClient();\n//     const getProject = (idCLient: number): Project => {\n//         try {\n//             var found =  projects.find(function(element){\n//                 return element.ProjectId === idCLient;\n//             });\n//             return found;  \n//         } catch (error) {\n//             return error;\n//         }\n//     }\n//     return (\n//         <div className=\"col grid\">\n//             { \n//                 clients.map((C) => <CandP key={C.ClientId} client={C} project={\n//                         getProject(C.ClientId)\n//                 }/>)\n//             }\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/LisamProject/Front_Lisam_React/src/pages/bothlist.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, {FunctionComponent} from 'react';\r\n// import CandP from '../component/client-and-project-card';\r\n// import Project from '../models/project';\r\n// import Client from '../models/client';\r\n// import './list.css';\r\n// import { useProject } from '../hooks/project-hook';\r\n// import { useClient } from '../hooks/client-hook';\r\n// import { isUndefined } from 'util';\r\n\r\n// export const BothList: FunctionComponent = () =>{\r\n//     const projects = useProject();\r\n//     const clients = useClient();\r\n\r\n//     const getProject = (idCLient: number): Project => {\r\n//         try {\r\n//             var found =  projects.find(function(element){\r\n           \r\n//                 return element.ProjectId === idCLient;\r\n//             });\r\n\r\n//             return found;  \r\n            \r\n//         } catch (error) {\r\n//             return error;\r\n//         }\r\n      \r\n       \r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"col grid\">\r\n//             { \r\n               \r\n//                 clients.map((C) => <CandP key={C.ClientId} client={C} project={\r\n//                         getProject(C.ClientId)\r\n//                 }/>)\r\n//             }\r\n            \r\n//         </div>\r\n//     )\r\n// } \r\n\r\n"]},"metadata":{},"sourceType":"module"}